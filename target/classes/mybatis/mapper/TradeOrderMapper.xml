<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kim.donghyun.repository.TradeOrderRepository">
	<resultMap id="orderMap"
		type="kim.donghyun.model.entity.TradeOrder">
		<id property="orderId" column="order_id" />
		<result property="userId" column="user_id" />
		<result property="type" column="type"
			javaType="kim.donghyun.model.enums.OrderType" />
		<result property="amount" column="amount" />
		<result property="price" column="price" />
		<result property="total" column="total" />
		<result property="orderMode" column="order_mode"
			javaType="kim.donghyun.model.enums.OrderMode" />
		<result property="status" column="status"
			javaType="kim.donghyun.model.enums.OrderStatus" />
		<result property="createdAt" column="created_at" />
	</resultMap>

	<!-- ✅ INSERT -->
	<insert id="insert"
		parameterType="kim.donghyun.model.entity.TradeOrder"
		useGeneratedKeys="true" keyProperty="orderId">
		INSERT INTO trade_order (
		user_id,
		type, amount, price, total, order_mode, status, created_at
		) VALUES (
		#{userId}, #{type}, #{amount}, #{price}, #{total},
		#{orderMode},
		#{status}, NOW()
		)
	</insert>

	<!-- ✅ 단건 조회 -->
	<select id="findById" parameterType="long" resultMap="orderMap">
		SELECT *
		FROM trade_order WHERE order_id = #{orderId}
	</select>

	<!-- ✅ 유저별 주문 내역 조회 -->
	<select id="findByUserId" parameterType="long"
		resultMap="orderMap">
		SELECT * FROM trade_order
		WHERE user_id = #{userId}
		ORDER BY
		created_at DESC
	</select>

	<select id="findPendingByUserId" parameterType="long"
		resultMap="orderMap">
		SELECT * FROM trade_order
		WHERE user_id = #{userId}
		AND status
		= 'PENDING'
		AND order_mode = 'LIMIT'
		ORDER BY created_at DESC
	</select>

	<!-- ✅ 상태 업데이트 -->
	<update id="updateStatus"
		parameterType="kim.donghyun.model.entity.TradeOrder">
		UPDATE trade_order
		SET status = #{status}
		WHERE order_id =
		#{orderId}
	</update>

	<!-- 지정가 매수 대기 -->
	<select id="findPendingLimitBids"
		resultType="kim.donghyun.model.dto.PriceQuantityDTO">
		SELECT price, SUM(amount) AS totalQuantity
		FROM trade_order
		WHERE order_mode = 'LIMIT'
		AND status = 'PENDING'
		AND type = 'BUY'
		GROUP
		BY price
		ORDER BY price DESC
		LIMIT #{depth}
	</select>

	<select id="findPendingLimitAsks"
		resultType="kim.donghyun.model.dto.PriceQuantityDTO">
		SELECT price, SUM(amount) AS totalQuantity
		FROM trade_order
		WHERE order_mode = 'LIMIT'
		AND status = 'PENDING'
		AND type = 'SELL'
		GROUP BY price
		ORDER BY price ASC
		LIMIT #{depth}
	</select>

	<select id="findPendingBidQuantityAtPrice"
		resultType="java.math.BigDecimal">
		SELECT COALESCE(SUM(amount), 0)
		FROM trade_order
		WHERE
		order_mode = 'LIMIT'
		AND status = 'PENDING'
		AND type = 'BUY'
		AND price =
		#{price}
	</select>

	<select id="findPendingAskQuantityAtPrice"
		resultType="java.math.BigDecimal">
		SELECT COALESCE(SUM(amount), 0)
		FROM trade_order
		WHERE
		order_mode = 'LIMIT'
		AND status = 'PENDING'
		AND type = 'SELL'
		AND price =
		#{price}
	</select>

	<select id="findPendingOrdersByPrice" resultMap="orderMap">
		SELECT * FROM
		trade_order
		WHERE order_mode = 'LIMIT'
		AND status = 'PENDING'
		AND price =
		#{price}
	</select>

	<!-- Pending quantity grouped by price for both bid and ask -->
	<select id="findPendingQuantityGroupedByPrice"
		resultType="kim.donghyun.model.dto.PriceQuantityDTO">
		SELECT price, SUM(amount) AS totalQuantity
		FROM trade_order
		WHERE order_mode = 'LIMIT'
		AND status = 'PENDING'
		GROUP BY price
		ORDER BY price
	</select>

	<select id="findPendingBidQuantityInRange"
		resultType="java.math.BigDecimal">
		SELECT COALESCE(SUM(amount), 0)
		FROM trade_order
		WHERE
		order_mode = 'LIMIT'
		AND status = 'PENDING'
		AND type = 'BUY'
		AND price
		&gt;= #{low}
		AND price &lt; #{high}
	</select>

	<select id="findPendingAskQuantityInRange"
		resultType="java.math.BigDecimal">
		SELECT COALESCE(SUM(amount), 0)
		FROM trade_order
		WHERE
		order_mode = 'LIMIT'
		AND status = 'PENDING'
		AND type = 'SELL'
		AND price
		&gt; #{low}
		AND price &lt;= #{high}
	</select>

</mapper>